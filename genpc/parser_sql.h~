#ifndef __PARSER_SQL_H
#define __PARSER_SQL_H
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <stdint.h>
#include <errno.h>

typedef enum 
{
    STATE_INIT = 0,
    STATE_CREATE_KEY,
    STATE_DROP_KEY,
    STATE_CREATE_KEY,
    STATE_COMMENT_KEY,
    STATE_DROP_KEY,
    STATE_TABLE_BEGIN,
    STATE_TABLE_NAME,
    STATE_COL_BEGIN,
    STATE_COL_NAME,
    STATE_COL_ATTRIBUTE,
    STATE_COL_END,
    STATE_TABLE_END,
    STATE_TABLE_PRIMARY_KEY_BEGIN,
    STATE_TABLE_PRIMARY_KEY_COL_BEGIN,
    STATE_TABLE_PRIMARY_KEY_COL_END,
    STATE_TABLE_PRIMARY_KEY_END,
    STATE_TABLE_INDEX,
    STATE_TABLE_INDEX_COL_BEGIN,
    STATE_TABLE_INDEX_COL_END,
    STATE_END
} STATE;

typedef enum
{
    SQL_COL_TYPE_VARCHAR2 = 1,
    SQL_COL_TYPE_NUMBER,
    SQL_COL_TYPE_INTEGER,
    SQL_COL_TYPE_FLOAT,
    SQL_COL_TYPE_STRING,
    SQL_COL_TYPE_VARNUM,
    SQL_COL_TYPE_LONG = 8,
    SQL_COL_TYPE_VARCHAR,
    SQL_COL_TYPE_RAWID = 11,
    SQL_COL_TYPE_DATE,
    SQL_COL_TYPE_VARRAW = 15,
    SQL_COL_TYPE_RAW = 23,
    SQL_COL_TYPE_LONGRAW,
    SQL_COL_TYPE_UNSIGNED = 68,
    SQL_COL_TYPE_LONGVARCHAR = 94,
    SQL_COL_TYPE_LONGVARRAW,
    SQL_COL_TYPE_CHAR,
    SQL_COL_TYPE_CHARZ,
    SQL_COL_TYPE_MLSLABEL = 106

} SQL_COL_TYPE;
   


#endif // __PARSER_SQL_H
